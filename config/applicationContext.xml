<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop" 
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.xinguo.dop" />

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean>

	<!-- json -->
	<bean id="xmlFileViewResolver" class="org.springframework.web.servlet.view.XmlViewResolver">
		<property name="location">
			<value>classpath:jsonviews.xml</value>
		</property>
		<property name="order">
			<value>1</value>
		</property>
	</bean>

	<bean id="config" class="com.xinguo.util.common.SystemConfig">
		
		<property name="bbsServerIp" value="${bbs.ServerIp}" />

		<property name="bbsServerPort" value="${bbs.ServerPort}" />

		<property name="recordFilePath" value="${record.FilePath}" />
		
		<property name="recordDir" value="${record.Dir}" />
		
		<property name="recordBackupPath" value="${record.BackupPath}" />
		
		<property name="recordIp" value="${record.Ip}" />
		
		<property name="exporttmpfilepath" value="${export.tmpfilepath}" />
		
		<property name="printprojectpath" value="${printproject.path}" />
		
		<property name="callTicketsQueryLimit" value="${callTickets.Query.Limit}" />
		
		<property name="maxItme" value="${some.maxItme}"/>
		
		<property name="subscriberMaxItme" value="${subscriber.maxItem}"/>
		
		<property name="subscriberMode" value="${subscriber.mode}"/>
        
        <property name="subscriberPageBreak" value="${subscriber.excel.printheight}"/>
        
        <property name="isSubscriberPageBreak" value="${subscriber.excel.isprintheight}"/>
        
      	<property name="subscriberexcelprintcmd" value="${subscriber.excel.printcmd}"/>
      	
      	<property name="subscriberexcelexportdir" value="${subscriber.excel.exportdir}"/>
      	
      	<property name="callticketinfowordprintcmd" value="${callticketinfo.word.printcmd}"/>
        
        <property name="recorddownload" value="${record.download}"/>
        
        <property name="reportdetailexcelexportdir" value="${reportdetail.excel.exportdir}"/>
        
        <property name="reportstatisticsexcelexportdir" value="${reportstatistics.excel.exportdir}"/>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!--
		<bean id="dataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean"> <property
		name="jndiName"> <value>${JNDI}</value> </property> <property
		name="resourceRef"> <value>${RESOURCEREF}</value> </property>
		<property name="jndiEnvironment"> <props> <prop
		key="java.naming.provider.url">${Context.PROVIDER_URL}</prop> <prop
		key="java.naming.factory.initial">${Context.INITIAL_CONTEXT_FACTORY}</prop>
		</props> </property> </bean>
	-->

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean id="simpleJdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
		<constructor-arg index="0">
			<ref bean="dataSource" />
		</constructor-arg>
	</bean>


	<!--
		配置事务管理器，注意这里的dataSource和SqlSessionFactoryBean的dataSource要一致，不然事务就没有作用了
	-->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<aop:config>
		<aop:pointcut id="bussinessService"
			expression="execution(public * com.xinguo.dop.service.*.*(..))" />
		<aop:advisor pointcut-ref="bussinessService" advice-ref="txAdvice" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="check*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="isExist*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

</beans>